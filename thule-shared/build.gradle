buildscript {
    repositories {
        maven { url "http://${nexusHost}:${nexusPort}/repository/maven-public" }
        mavenLocal()
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.20.0" apply(false)
    id "com.palantir.docker" version "0.20.1" apply(false)
    id "org.sonarqube" version "2.6.2" apply(false)
    id "org.springframework.boot" version "2.0.4.RELEASE" apply(false)
}

subprojects {
    apply plugin: "com.github.ben-manes.versions"
    apply plugin: "com.palantir.docker"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "jacoco"
    apply plugin: "java"
    apply plugin: "maven-publish"
    apply plugin: "org.sonarqube"
    apply plugin: "org.springframework.boot"

    // Standard Serin gradle plugin config
    apply from: "${rootDir}/../gradle/build-config.gradle"

    // Dependencies
    dependencyManagement {
        imports {
            mavenBom("org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE")
        }
    }

    // Non-standard Serin gradle plugin config
    bootJar.enabled = false // Don't need an "über-jar" but still want the rest of the spring boot plugin
    jar.enabled = true // Don't need an "über-jar" but still want the rest of the spring boot plugin
}


project("thule-spring-boot-starter-test") {
    description = "Thule Spring Boot Starter Test"
    dependencies {
        compile project(":thule-test")
        compile("nl.jqno.equalsverifier:equalsverifier:2.4.8")
        compile("org.awaitility:awaitility:3.1.2")
        compile("org.springframework.boot:spring-boot-starter-test")
        compile("org.springframework.cloud:spring-cloud-contract-wiremock")
        compile("pl.pojo:pojo-tester:0.7.6")
    }
}

project("thule-spring-boot-starter-utils") {
    description = "Thule Spring Boot Starter Utils"
    dependencies {
        compile project(":thule-utils")

        testCompile project(":thule-spring-boot-starter-test")
    }
}

project("thule-test") {
    description = "Thule Test"
    dependencies {
        compile("org.assertj:assertj-core")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.boot:spring-boot-starter-test")
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.retry:spring-retry")

        testCompile("pl.pojo:pojo-tester:0.7.6")
    }
}

project("thule-utils") {
    description = "Thule Utils"
    dependencies {
        compile("net.logstash.logback:logstash-logback-encoder:5.1")
        compile("org.codehaus.janino:janino:3.0.8") // Required by logback if-condition statements in the xml configuration
        compile("org.springframework.boot:spring-boot-starter-aop")
        compile("org.springframework.boot:spring-boot-starter-logging")
        compile("org.springframework.boot:spring-boot-starter-web") 

        testCompile project(":thule-spring-boot-starter-test")
    }
}
