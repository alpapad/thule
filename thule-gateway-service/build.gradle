buildscript {
    ext["mockito.version"] = "3.1.0"
    // Spring boot 2.1.6 uses mockito version 2.23.4 which does not fully support java 12

    repositories {
        maven { url "http://${nexusHost}:${nexusPort}/repository/maven-public" }
        mavenLocal()
    }

    dependencies {
        classpath("uk.co.serin.gradle.plugins:sonarqube-build-breaker-plugin:1.0.0-SNAPSHOT")
    }
}

// Plugins
plugins {
    id "com.github.ben-manes.versions" version "0.27.0"
    id "com.palantir.docker" version "0.22.1"
    id "org.asciidoctor.convert" version "1.6.0"
    id "org.sonarqube" version "2.8"
    id "org.springframework.boot" version "2.1.9.RELEASE"
}
apply plugin: "io.spring.dependency-management"
apply plugin: "java"
apply plugin: "jacoco"
apply plugin: "maven-publish"
apply plugin: "uk.co.serin.gradle.plugins.sonarqube-build-breaker"

// Standard Thule gradle plugin config
apply from: "${rootDir}/../gradle/build-config.gradle"

// Non-standard Thule gradle plugin config

description = "Thule Gateway Service"

// Dependencies
dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR3")
    }
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    compileOnly("org.projectlombok:lombok")

    compile("uk.co.serin.thule:thule-spring-boot-starter:${thuleSharedVersion}")
    compile("uk.co.serin.thule:thule-spring-boot-starter-oauth2:${thuleSharedVersion}")
    compile("org.jolokia:jolokia-core") // Required for JMX support when using the Admin server
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.cloud:spring-cloud-starter-config")
    compile("org.springframework.cloud:spring-cloud-starter-kubernetes")
    compile("org.springframework.cloud:spring-cloud-starter-kubernetes-ribbon")
    compile('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
    compile("org.springframework.cloud:spring-cloud-starter-sleuth")
    compile("org.springframework.cloud:spring-cloud-starter-zipkin")
    compile("org.springframework.retry:spring-retry") // Required to retry connecting to the configuration service when it is not available at startup

    testCompile("uk.co.serin.thule:thule-spring-boot-starter-test:${thuleSharedVersion}")

    dtestCompile("uk.co.serin.thule:thule-spring-boot-starter:${thuleSharedVersion}")
    dtestCompile("uk.co.serin.thule:thule-spring-boot-starter-test:${thuleSharedVersion}")
}
