// Java plugin (Note: Several plugins depend on the Java plugin so ensure it remains the first plugin defined)
apply plugin: "java"
// Java plugin configuration
sourceCompatibility = 8.0
targetCompatibility = 8.0

// Docker plugin
apply plugin: "docker"
// Docker plugin configuration
task dockerBuild(type: Docker, dependsOn: [jar, test]) {
    // dockerBuild options
    applicationName = jar.baseName
    dockerfile = file("src/main/docker/Dockerfile")
    push = false
    registry = "pooh.serin-consultancy.co.uk"
    tagVersion = "latest"

    // Add files to Docker context
    doFirst {
        copy { from jar into stageDir }
        copy { from "src/main/docker/docker-entrypoint.sh" into stageDir }
    }

    // Only enable if a Dockerfile exists
    enabled = file(projectDir.toString() + '/src/main/docker/Dockerfile').isFile()

    // Add to build lifecycle
    assemble.dependsOn dockerBuild
}

// Jacoco plugin
apply plugin: "jacoco"
// Jacoco plugin configuration
jacoco.toolVersion = "0.7.9"
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = "BRANCH"
                minimum = 1.0 // 100% coverage
            }
            limit {
                counter = "CLASS"
                minimum = 1.0 // 100% coverage
            }
            limit {
                counter = "COMPLEXITY"
                minimum = 1.0 // 100% coverage
            }
            limit {
                counter = "INSTRUCTION"
                minimum = 1.0 // 100% coverage
            }
            limit {
                counter = "LINE"
                minimum = 1.0 // 100% coverage
            }
            limit {
                counter = "METHOD"
                minimum = 1.0 // 100% coverage
            }
        }
    }
}
// Always create a report even if jacocoTestCoverageVerification fails
jacocoTestCoverageVerification.dependsOn jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

// Maven Publish plugin
apply plugin: 'maven-publish'
// Maven-publish plugin configuration
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url("http://pooh:8081/repository/maven-${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}")
            credentials {
                username = "admin"
                password = "admin123"
            }
        }
    }
}

// Spring Boot plugin
apply plugin: "org.springframework.boot"
// Spring Boot configuration
ext["assertj.version"] = "3.8.0"// Override spring boot defined version 2.6.0 which contains bugs
ext["mockito.version"] = "2.11.0" // Override spring boot defined version which defaults to mockito 1.10.19 and does not support mocking finals
// Spring boot create META-INF/build-info.properties to automatically add to the spring actutator info
springBoot {
    buildInfo()
}
// Replace the version in spring config with the gradle build version
processResources.filter { String line -> line.replace("@version@", version.toString()) }

// Versions plugin
apply plugin: "com.github.ben-manes.versions"
// Versions plugin configuration
dependencyUpdates.revision = "release"