buildscript {
    ext["mockito.version"] = "3.1.0" // Spring boot 2.1 uses mockito version 2.23.4 which does not fully support java 11+

    repositories {
        maven { url "http://${nexusHost}:${nexusPort}/repository/maven-public" }
        mavenLocal()
    }

    dependencies {
        classpath("uk.co.serin.gradle.plugins:sonarqube-build-breaker-plugin:1.0.0-SNAPSHOT")
        classpath("uk.co.serin.gradle.scripts:serin-gradle-scripts:1.0.0-SNAPSHOT")
    }
}

// Plugins
plugins {
    id "com.github.ben-manes.versions" version "0.27.0"
    id "org.asciidoctor.convert" version "1.6.0"
    id "org.sonarqube" version "2.8"
    id "org.springframework.boot" version "2.1.10.RELEASE"
}
apply plugin: "io.spring.dependency-management"
apply plugin: "java"
apply plugin: "jacoco"
apply plugin: "maven-publish"
apply plugin: "uk.co.serin.gradle.plugins.sonarqube-build-breaker"

// Standard Serin gradle plugin config
apply from: buildscript.classLoader.getResource("uk/co/serin/gradle/scripts/build-config.gradle")

// Non-standard Serin gradle plugin config
configurations {
    config
}
dependencies {
    config("uk.co.serin.thule:thule-admin-service:latest.integration")
    config("uk.co.serin.thule:thule-discovery-service:latest.integration")
    config("uk.co.serin.thule:thule-email-service:latest.integration")
    config("uk.co.serin.thule:thule-gateway-service:latest.integration")
    config("uk.co.serin.thule:thule-people-service:latest.integration")
}
task collectConfigs {
    doLast {
        configurations.config.resolvedConfiguration.resolvedArtifacts.each { artifact ->
            copy {
                from zipTree(artifact.file)
                into "$buildDir/generated-resources/micro-services-config/config/" + artifact.moduleVersion.id.name
                include "/BOOT-INF/classes/config/**"
                eachFile { f ->
                    f.path = f.path.replaceFirst("BOOT-INF/classes/config", "")
                }
                includeEmptyDirs false
            }
        }
    }
}

description = "Thule Configuration Service"

// Dependencies
dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR4")
    }
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")

    compileOnly("org.projectlombok:lombok")

    implementation("uk.co.serin.thule:thule-spring-boot-starter:${thuleSharedVersion}")
    implementation("org.jolokia:jolokia-core") // Required for JMX support when using the Admin server
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.cloud:spring-cloud-config-server")
    implementation("org.springframework.cloud:spring-cloud-starter-kubernetes")
    implementation("org.springframework.cloud:spring-cloud-starter-sleuth")
    implementation("org.springframework.cloud:spring-cloud-starter-zipkin")

    testImplementation("uk.co.serin.thule:thule-spring-boot-starter-test:${thuleSharedVersion}")

    dtestImplementation("uk.co.serin.thule:thule-spring-boot-starter-test:${thuleSharedVersion}")
    dtestImplementation("org.springframework.boot:spring-boot-starter-actuator")
    dtestImplementation("org.springframework.boot:spring-boot-starter-web")
}
