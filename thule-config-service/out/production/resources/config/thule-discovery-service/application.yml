# Eureka configuration
eureka:
  instance:
    hostname: localhost
    # Hostname will be the docker generated hostname by default which will not will not be accessible outside of the host itself, so use ipaddress instead
    preferIpAddress: true
  client:
    # Don't fetch registry, this is only required by discovery service clients that are not also a discovery service server
    fetchRegistry: false
    # Register with iself so that the thule-admin-server can administrate all servers, including the thule-discovery-service
    registerWithEureka: true
    serviceUrl:
      # Location of peer discovery services to keep the registry in sync across all discovery services, in this case we only have a single node so it refers to itself
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/

# Spring actuator configuration
endpoints:
  sensitive: false
info:
  description: Thule Discovery Service
  name: ${spring.application.name}
management:
  security:
    # Disabled to enable health endpoint to show complete health rather than just 'status'
    enabled: false

# Spring logging
logging:
  level:
    org.springframework: info
    uk.co.serin: trace

# Spring server configuration
server:
  port: 8761

# Spring boot configuration
spring:
  jackson:
    serialization:
      # Admin server displays the buildTime of this service which by default will be as an
      # absolute time (i.e. a long), not particularly meaningful unless we instruct jackson to
      # serialize it as a timestamp which is a human readable form
      write_dates_as_timestamps: false
  sleuth:
      sampler:
        percentage: 1.0
  zipkin:
    baseUrl: http://zipkin-host:9411

# Thule configuration
thule:
  logging:
    logstash:
      host: logstash-host
      port: 5400