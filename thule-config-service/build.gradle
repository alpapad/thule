buildscript {
    apply from: "${rootDir}/../gradle/repo-config.gradle", to: buildscript

    // Dependencies for non-core plugins
    // Note: These dependencies must reside in a buildscript block that is *not* within a script plugin
    // see https://github.com/gradle/gradle/issues/1894
    dependencies {
        classpath("uk.co.serin.gradle.plugins:sonarqube-build-breaker-plugin:1.0.0-SNAPSHOT") {
            changing = true
        }
    }

    // Changing modules are cached by default for 24 hours, change the default to never and mark snapshots as changing (must be within the buildscript)
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.17.0"
    id "com.palantir.docker" version "0.13.0"
    id "jacoco"
    id "java"
    id "maven-publish"
    id "org.sonarqube" version "2.6.1"
    id "org.springframework.boot" version "2.0.0.M6"
}
apply plugin: "io.spring.dependency-management"
apply plugin: "uk.co.serin.gradle.plugins.sonarqube-build-breaker"

// Standard Serin gradle plugin config
apply from: "${rootDir}/../gradle/build-config.gradle"
apply from: "${rootDir}/../gradle/plugin-docker-config.gradle"
apply from: "${rootDir}/../gradle/plugin-jacoco-config.gradle"
apply from: "${rootDir}/../gradle/plugin-maven-publish-config.gradle"
apply from: "${rootDir}/../gradle/plugin-sonarqube-config.gradle"
apply from: "${rootDir}/../gradle/plugin-spring-boot-config.gradle"

dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:Finchley.M4")
    }
}

dependencies {
    compile("uk.co.serin.thule:thule-spring-boot-starter-utils:1.0.0-SNAPSHOT")
    compile("net.logstash.logback:logstash-logback-encoder:4.11")
    compile("org.jolokia:jolokia-core") // Required for JMX support when using the Admin server
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-logging")
    compile("org.springframework.cloud:spring-cloud-config-server")
    compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
    compile("org.springframework.cloud:spring-cloud-starter-sleuth")
    compile("org.springframework.cloud:spring-cloud-starter-zipkin")

    // Required to retry connecting to the discovery server when it is not available at startup
    itestCompile("org.springframework.retry:spring-retry")

    testCompile("uk.co.serin.thule:thule-spring-boot-starter-test:1.0.0-SNAPSHOT")
}
