buildscript {
    repositories {
        maven { url "http://${nexusHost}:${nexusPort}/repository/maven-public" }
        mavenLocal()
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.20.0" // Let it apply by default so that the plugin consolidates at the root of the project, otherwise it often hangs when checking dependency versions
    id "com.palantir.docker" version "0.21.0" apply(false)
    id "org.sonarqube" version "2.7" apply(false)
    id "org.springframework.boot" version "2.1.2.RELEASE" apply(false)
}

project("thule-admin-config") {
    description = "Thule Admin Config"

    // Plugins
    apply plugin: "java"
    apply plugin: "maven-publish"

    // Standard Thule gradle plugin config
    apply from: "${rootDir}/../gradle/build-config.gradle"

    // Non-standard Thule gradle plugin config
}

project("thule-admin-service") {
    description = "Thule Admin Service"

    // Plugins
    apply plugin: "com.palantir.docker"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "java"
    apply plugin: "jacoco"
    apply plugin: "org.sonarqube"
    apply plugin: "org.springframework.boot"
    apply plugin: "maven-publish"

    // Standard Thule gradle plugin config
    apply from: "${rootDir}/../gradle/build-config.gradle"

    // Non-standard Thule gradle plugin config

    // Dependencies
    dependencyManagement {
        imports {
            mavenBom("org.springframework.cloud:spring-cloud-dependencies:Greenwich.RELEASE")
        }
    }

    dependencies {
        compile("uk.co.serin.thule:thule-spring-boot-starter:${thuleSharedVersion}")
        compile("de.codecentric:spring-boot-admin-starter-server:2.1.2")
        compile("org.jolokia:jolokia-core") // Required for JMX support when using the Admin server
        compile("org.springframework.cloud:spring-cloud-starter-config")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
        compile("org.springframework.cloud:spring-cloud-starter-sleuth")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin")
        compile("org.springframework.retry:spring-retry") // Required to retry connecting to the configuration service when it is not available at startup

        testCompile("uk.co.serin.thule:thule-spring-boot-starter-test:${thuleSharedVersion}")

        itestCompile project(":thule-admin-config")

        ctestCompile project(":thule-admin-config")

        dtestCompile("uk.co.serin.thule:thule-spring-boot-starter:${thuleSharedVersion}")
        dtestCompile("uk.co.serin.thule:thule-spring-boot-starter-test:${thuleSharedVersion}")
        dtestCompile("org.springframework.boot:spring-boot-starter-web")
    }
}