buildscript {
    ext["hibernate.version"] = "5.2.12.Final" // Override spring boot defined version 5.0.12.Final which contains a bug whereby auto-ddl=validate always fails
    ext["jackson.version"] = "2.9.3"          // Override spring boot defined version 2.8.10 which fixes a bug where the JsonProperty access attribute is ignored

    apply from: "${rootDir}/../gradle/repo-config.gradle", to: buildscript

    // Dependencies for non-core plugins
    // Note: These dependencies must reside in a buildscript block that is *not* within a script plugin
    // see https://github.com/gradle/gradle/issues/1894
    dependencies {
        classpath("uk.co.serin.gradle.plugins:sonarqube-build-breaker-plugin:1.0.0-SNAPSHOT") {
            changing = true
        }
    }

    // Changing modules are cached by default for 24 hours, change the default to never and mark snapshots as changing (must be within the buildscript)
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.17.0"
    id "com.palantir.docker" version "0.17.2"
    id "jacoco"
    id "java"
    id "maven-publish"
    id "org.sonarqube" version "2.6.1"
    id "org.springframework.boot" version "1.5.9.RELEASE"
}
apply plugin: "io.spring.dependency-management"
apply plugin: "uk.co.serin.gradle.plugins.sonarqube-build-breaker"

// Standard Serin gradle plugin config
apply from: "${rootDir}/../gradle/build-config.gradle"
apply from: "${rootDir}/../gradle/plugin-docker-with-spring-boot-1.5.x-config.gradle"
apply from: "${rootDir}/../gradle/plugin-jacoco-config.gradle"
apply from: "${rootDir}/../gradle/plugin-maven-publish-config.gradle"
apply from: "${rootDir}/../gradle/plugin-sonarqube-config.gradle"
apply from: "${rootDir}/../gradle/plugin-spring-boot-with-spring-boot-1.5.x-config.gradle"

// Non-standard Serin gradle plugin config
sonarqube {
    properties {
        // SonarQube will fail due to duplicate code across micro-services, however, this is legal. So we will exclude cpd for those classes
        property "sonar.cpd.exclusions", "**/domain/**"
    }
}
// Required for Java9
//    tasks.withType(Test) {
//        jvmArgs += ["--add-modules", "java.xml.bind"]
//    }

dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:Edgware.RELEASE")
    }
}

dependencies {
    compile("uk.co.serin.thule:thule-spring-boot-starter-utils:1.0.0-SNAPSHOT") {
        changing = true
    }
    // Spring boot will add java8 java.util.time Jackson support when this dependency has been added
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    compile("com.googlecode.log4jdbc:log4jdbc:1.2")
    compile("com.h2database:h2")
    compile("net.logstash.logback:logstash-logback-encoder:4.11")
    compile("org.apache.httpcomponents:httpclient")
    compile("org.flywaydb:flyway-core")
    compile("org.jolokia:jolokia-core") // Required for JMX support when using the Admin server
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-logging")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-validation")
    compile("org.springframework.cloud:spring-cloud-starter-config")
    compile("org.springframework.cloud:spring-cloud-starter-eureka")
    compile("org.springframework.cloud:spring-cloud-starter-feign")
    compile("org.springframework.cloud:spring-cloud-starter-sleuth")
    compile("org.springframework.cloud:spring-cloud-starter-zipkin")
    compile("org.springframework.data:spring-data-rest-hal-browser")
    // Required to retry connecting to the discovery server when it is not available at startup
    compile("org.springframework.retry:spring-retry")

    testCompile("uk.co.serin.thule:thule-spring-boot-starter-test:1.0.0-SNAPSHOT") {
        changing = true
    }
    testCompile("com.googlecode.log4jdbc:log4jdbc:1.2")
    testCompile("com.oracle:ojdbc6:11.2.0.1.0")
    testCompile("mysql:mysql-connector-java")
    testCompile("org.hsqldb:hsqldb")
}