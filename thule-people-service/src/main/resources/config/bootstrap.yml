# Bootstrap
spring:
  application:
    # Required by the discovery service as the key to enable other services to lookup and access this service
    name: thule-people-service
  cloud:
    config:
      discovery:
        # By default, spring cloud opts for a config service first approach (enabled: false) but we have opted for a discovery service first approach (enabled: true)
        # In other words, the config service will be accessed via the discovery service
        enabled: true
        # Name of the config service as known in the discovery service
        serviceId: thule-configuration-service
      # Without failFast, there is a race condition when the config server has not yet registered with the discovery server.
      # When this happens, this micro service will stay up but in an unconfigured state. By setting failFast to true
      # this service will fail and shutdown. However, with a docker compose restart policy of always, this service will be
      # automatically restarted. Eventually, following a restart, the configuration service would have registered with the
      # discovery service and this service will configure correctly.
      failFast: true
      # When to retry accessing the config service if it not available at startup
      retry:
        maxAttempts: 9999
        initialInterval: 3000

eureka:
  instance:
    # By default, the discovery service will use the default actuator path, i.e. /health but we change it here to reflect our custom servlet-context /people-service
    healthCheckUrlPath: /people-service/health
    metadataMap:
      management:
        # Admin server uses context-path to generate URL for actuator endpoints when using Eureka for service discovery
        context-path: /people-service
    # Hostname will be the docker generated hostname by default which will not will not be accessible outside of the host itself, so use ipaddress instead
    preferIpAddress: true
    # By default, the discovery service will use the default actuator path, i.e. /info but we change it here to reflect our custom servlet-context /people-service
    statusPageUrlPath: /people-service/info
  client:
    serviceUrl:
      # Location of the discovery service to register this service
      defaultZone: http://${eureka.host:localhost}:${eureka.port:8761}/eureka/